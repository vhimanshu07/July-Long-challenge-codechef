/* package whatever; // don't place package name! */

import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Ideone
{
	static class FastReader 
    { 
        BufferedReader br; 
        StringTokenizer st; 
  
        public FastReader() 
        { 
            br = new BufferedReader(new
                     InputStreamReader(System.in)); 
        } 
  
        String next() 
        { 
            while (st == null || !st.hasMoreElements()) 
            { 
                try
                { 
                    st = new StringTokenizer(br.readLine()); 
                } 
                catch (IOException  e) 
                { 
                    e.printStackTrace(); 
                } 
            } 
            return st.nextToken(); 
        } 
  
        int nextInt() 
        { 
            return Integer.parseInt(next()); 
        } 
  
        long nextLong() 
        { 
            return Long.parseLong(next()); 
        } 
  
        double nextDouble() 
        { 
            return Double.parseDouble(next()); 
        } 
  
        String nextLine() 
        { 
            String str = ""; 
            try
            { 
                str = br.readLine(); 
            } 
            catch (IOException e) 
            { 
                e.printStackTrace(); 
            } 
            return str; 
        } 
    } 
    static class pair{
    	long a;
    	long b;
    	pair(long e,long f)
    	{
    		a=e;
    		b=f;
    	}
    } 
    static long binarycount(long num)
    {
    	long tot=0;
    	while(num>0)
    	{
    		tot=tot+num%10;
    		num=num/10;
    	}
    	return tot;
    }
    static StringBuilder solve(int king)
    {
    	char ch[][]=new char[8][8];
    	for(int i=0;i<8;i++)
    	{
    		for(int j=0;j<8;j++)
    		{
    			ch[i][j]='X';
    		}
    	}
    	ch[0][0]='O';
    	
    	int i=0;
    	while(i<8)
    	{
    		int j=0;
    		
    		while(j<8)
    		{
    			if(i==j&&i==0)
    			{
    				j++;
    				continue;
    			}
    			if(king>0)
    			{
    			ch[j][i]='.';
    			king--;
    			}
    			j++;
    		}
    		i++;
    	}
    	StringBuilder d=new StringBuilder();
    	int g=0;
    	while(g<8)
    	{
    		int f=0;
    		while(f<8)
    		{
    			if(g==f&&f==0)
    			{
    				
    			}
    			else
    			d.append(ch[g][f]);
    			f++;
    		}d.append("\n");
    		g++;
    	}
    	return d;
    }
	public static void main (String[] args) throws java.lang.Exception
	{
		// your code goes here
		FastReader scn=new FastReader();
		long t=scn.nextLong();
		StringBuilder sb=new StringBuilder();
		for(long h =1;h<=t;h++)
		{
		     long n=scn.nextLong();
		     long cal=n+n+n+n;
		     cal--;
		     
		     ArrayList<pair>arr=new ArrayList<>();
		     long f=0;
		     while(f<cal)
		     {
		     	long left=scn.nextLong();
		     	long right=scn.nextLong();
		     	f++;
		     	arr.add(new pair(left,right));
		     }
		     
		     //for(int i=0;i<arr.size();i++)
		     //{
		     //	System.out.println(arr.get(i).a+" "+arr.get(i).b);
		     //}
		     HashMap<Long,Integer>map1=new HashMap<>();
		     
		     HashMap<Long,Integer>map2=new HashMap<>();
		     for(int i=0;i<arr.size();i++)
		     {
		     	long left=arr.get(i).a;
		     	long right=arr.get(i).b;
		     	if(map1.containsKey(left))
		     	{
		     		map1.put(left,map1.get(left)+1);
		     	}
		     	else if(!map1.containsKey(left))
		     	{
		     		map1.put(left,1);
		     	}
		     	if(map2.containsKey(right))
		     	{
		     		map2.put(right,map2.get(right)+1);
		     	}
		     	else if(!map2.containsKey(right))
		     	{
		     		map2.put(right,1);
		     	}
		     }
		     //System.out.println(map1);
		     //System.out.println(map2);
		     for(long num:map1.keySet())
		     {
		     	if((map1.get(num)&1)==1)
		     	{
		     		sb.append(num+" ");
		     		break;
		     	}
		     }
		     for(long num:map2.keySet())
		     {
		     	if((map2.get(num)&1)==1)
		     	{
		     		sb.append(num);
		     		break;
		     	}
		     }
		     sb.append("\n");
		}
		System.out.print(sb);
	}
}
